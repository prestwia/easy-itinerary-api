generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model activityevents {
  activity_event_id Int       @id @default(autoincrement())
  title             String?   @db.VarChar(255)
  description       String?   @db.VarChar(255)
  address           String?   @db.VarChar(255)
  start_time        DateTime? @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  notes             String?
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  modified_at       DateTime  @default(now()) @db.Timestamptz(6)
  trip_id           String    @db.Uuid
  trips             trips     @relation(fields: [trip_id], references: [trip_id], onDelete: Cascade, onUpdate: NoAction)
}

model lodgingevents {
  address          String?   @db.VarChar(255)
  lodging_type     String?   @db.VarChar(255)
  start_time       DateTime? @db.Timestamptz(6)
  end_time         DateTime? @db.Timestamptz(6)
  notes            String?
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  modified_at      DateTime  @default(now()) @db.Timestamptz(6)
  trip_id          String    @db.Uuid
  lodging_event_id Int       @id @default(autoincrement())
  trips            trips     @relation(fields: [trip_id], references: [trip_id], onDelete: Cascade, onUpdate: NoAction)
}

model travelevents {
  travel_method   String?   @db.VarChar(255)
  start_location  String?   @db.VarChar(255)
  end_location    String?   @db.VarChar(255)
  start_time      DateTime? @db.Timestamptz(6)
  end_time        DateTime? @db.Timestamptz(6)
  notes           String?
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  modified_at     DateTime  @default(now()) @db.Timestamptz(6)
  trip_id         String    @db.Uuid
  travel_event_id Int       @id @default(autoincrement())
  trips           trips     @relation(fields: [trip_id], references: [trip_id], onDelete: Cascade, onUpdate: NoAction)
}

model trips {
  title          String?          @db.VarChar(255)
  notes          String?          @db.VarChar(255)
  start_date     DateTime?        @db.Timestamptz(6)
  end_date       DateTime?        @db.Timestamptz(6)
  user_id        Int
  id             Int              @default(autoincrement())
  trip_id        String           @id @db.Uuid
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  modified_at    DateTime?        @default(now()) @db.Timestamptz(6)
  activityevents activityevents[]
  lodgingevents  lodgingevents[]
  travelevents   travelevents[]
}
